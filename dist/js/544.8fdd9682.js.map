{"version":3,"file":"js/544.8fdd9682.js","mappings":";;;;AAGA,MAAMA,EAAc,cACdC,EAAgB,gBAChBC,EAAa,CACjB,MACA,YACA,QACA,SACA,IACA,QACA,QACA,YACA,aACA,UACA,OACA,OAEIC,EAAqBC,IACzB,IAAIC,EAAe,GACfC,GAAe,EACnB,MAAMC,EAAMH,EAASA,EAAOI,WAAaC,SACnCC,EAAON,GAAkBK,SAASE,KAClCC,EAAYC,IAChBR,EAAaS,SAASC,GAAOA,EAAGC,UAAUC,OAAOjB,KACjDa,EAASC,SAASC,GAAOA,EAAGC,UAAUE,IAAIlB,KAC1CK,EAAeQ,CAAQ,EAEnBM,EAAc,KAClBb,GAAe,EACfM,EAAS,GAAG,EAERQ,EAAaC,IACjBf,EAAeJ,EAAWoB,SAASD,EAAGE,KACjCjB,GACHM,EAAS,GACX,EAEIY,EAAaH,IACjB,GAAIf,QAAoCmB,IAApBJ,EAAGK,aAA4B,CACjD,MAAMC,EAAUN,EAAGK,eAAeE,QAAQb,KAEpCA,EAAGC,WACED,EAAGC,UAAUa,SAAS5B,KAIjCW,EAASe,EACX,GAEIG,EAAa,KACbvB,EAAIwB,gBAAkBrB,GACxBE,EAAS,GACX,EAEFL,EAAIyB,iBAAiB,UAAWZ,GAChCb,EAAIyB,iBAAiB,UAAWR,GAChCjB,EAAIyB,iBAAiB,WAAYF,GACjCvB,EAAIyB,iBAAiB,aAAcb,EAAa,CAAEc,SAAS,IAC3D1B,EAAIyB,iBAAiB,YAAab,GAClC,MAAMe,EAAU,KACd3B,EAAI4B,oBAAoB,UAAWf,GACnCb,EAAI4B,oBAAoB,UAAWX,GACnCjB,EAAI4B,oBAAoB,WAAYL,GACpCvB,EAAI4B,oBAAoB,aAAchB,GACtCZ,EAAI4B,oBAAoB,YAAahB,EAAY,EAEnD,MAAO,CACLe,UACAtB,WACD,C","sources":["webpack://ionic-app-base/./node_modules/@ionic/core/components/focus-visible.js"],"sourcesContent":["/*!\r\n * (C) Ionic http://ionicframework.com - MIT License\r\n */\r\nconst ION_FOCUSED = 'ion-focused';\r\nconst ION_FOCUSABLE = 'ion-focusable';\r\nconst FOCUS_KEYS = [\r\n  'Tab',\r\n  'ArrowDown',\r\n  'Space',\r\n  'Escape',\r\n  ' ',\r\n  'Shift',\r\n  'Enter',\r\n  'ArrowLeft',\r\n  'ArrowRight',\r\n  'ArrowUp',\r\n  'Home',\r\n  'End',\r\n];\r\nconst startFocusVisible = (rootEl) => {\r\n  let currentFocus = [];\r\n  let keyboardMode = true;\r\n  const ref = rootEl ? rootEl.shadowRoot : document;\r\n  const root = rootEl ? rootEl : document.body;\r\n  const setFocus = (elements) => {\r\n    currentFocus.forEach((el) => el.classList.remove(ION_FOCUSED));\r\n    elements.forEach((el) => el.classList.add(ION_FOCUSED));\r\n    currentFocus = elements;\r\n  };\r\n  const pointerDown = () => {\r\n    keyboardMode = false;\r\n    setFocus([]);\r\n  };\r\n  const onKeydown = (ev) => {\r\n    keyboardMode = FOCUS_KEYS.includes(ev.key);\r\n    if (!keyboardMode) {\r\n      setFocus([]);\r\n    }\r\n  };\r\n  const onFocusin = (ev) => {\r\n    if (keyboardMode && ev.composedPath !== undefined) {\r\n      const toFocus = ev.composedPath().filter((el) => {\r\n        // TODO(FW-2832): type\r\n        if (el.classList) {\r\n          return el.classList.contains(ION_FOCUSABLE);\r\n        }\r\n        return false;\r\n      });\r\n      setFocus(toFocus);\r\n    }\r\n  };\r\n  const onFocusout = () => {\r\n    if (ref.activeElement === root) {\r\n      setFocus([]);\r\n    }\r\n  };\r\n  ref.addEventListener('keydown', onKeydown);\r\n  ref.addEventListener('focusin', onFocusin);\r\n  ref.addEventListener('focusout', onFocusout);\r\n  ref.addEventListener('touchstart', pointerDown, { passive: true });\r\n  ref.addEventListener('mousedown', pointerDown);\r\n  const destroy = () => {\r\n    ref.removeEventListener('keydown', onKeydown);\r\n    ref.removeEventListener('focusin', onFocusin);\r\n    ref.removeEventListener('focusout', onFocusout);\r\n    ref.removeEventListener('touchstart', pointerDown);\r\n    ref.removeEventListener('mousedown', pointerDown);\r\n  };\r\n  return {\r\n    destroy,\r\n    setFocus,\r\n  };\r\n};\r\n\r\nexport { startFocusVisible };\r\n"],"names":["ION_FOCUSED","ION_FOCUSABLE","FOCUS_KEYS","startFocusVisible","rootEl","currentFocus","keyboardMode","ref","shadowRoot","document","root","body","setFocus","elements","forEach","el","classList","remove","add","pointerDown","onKeydown","ev","includes","key","onFocusin","undefined","composedPath","toFocus","filter","contains","onFocusout","activeElement","addEventListener","passive","destroy","removeEventListener"],"sourceRoot":""}