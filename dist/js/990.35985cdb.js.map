{"version":3,"file":"js/990.35985cdb.js","mappings":"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","sources":["webpack://ionic-app-base/./node_modules/@ionic/core/components/gesture-controller.js","webpack://ionic-app-base/./node_modules/@ionic/core/components/index3.js","webpack://ionic-app-base/./node_modules/@ionic/core/components/swipe-back.js"],"sourcesContent":["/*!\r\n * (C) Ionic http://ionicframework.com - MIT License\r\n */\r\nclass GestureController {\r\n  constructor() {\r\n    this.gestureId = 0;\r\n    this.requestedStart = new Map();\r\n    this.disabledGestures = new Map();\r\n    this.disabledScroll = new Set();\r\n  }\r\n  /**\r\n   * Creates a gesture delegate based on the GestureConfig passed\r\n   */\r\n  createGesture(config) {\r\n    var _a;\r\n    return new GestureDelegate(this, this.newID(), config.name, (_a = config.priority) !== null && _a !== void 0 ? _a : 0, !!config.disableScroll);\r\n  }\r\n  /**\r\n   * Creates a blocker that will block any other gesture events from firing. Set in the ion-gesture component.\r\n   */\r\n  createBlocker(opts = {}) {\r\n    return new BlockerDelegate(this, this.newID(), opts.disable, !!opts.disableScroll);\r\n  }\r\n  start(gestureName, id, priority) {\r\n    if (!this.canStart(gestureName)) {\r\n      this.requestedStart.delete(id);\r\n      return false;\r\n    }\r\n    this.requestedStart.set(id, priority);\r\n    return true;\r\n  }\r\n  capture(gestureName, id, priority) {\r\n    if (!this.start(gestureName, id, priority)) {\r\n      return false;\r\n    }\r\n    const requestedStart = this.requestedStart;\r\n    let maxPriority = -10000;\r\n    requestedStart.forEach((value) => {\r\n      maxPriority = Math.max(maxPriority, value);\r\n    });\r\n    if (maxPriority === priority) {\r\n      this.capturedId = id;\r\n      requestedStart.clear();\r\n      const event = new CustomEvent('ionGestureCaptured', { detail: { gestureName } });\r\n      document.dispatchEvent(event);\r\n      return true;\r\n    }\r\n    requestedStart.delete(id);\r\n    return false;\r\n  }\r\n  release(id) {\r\n    this.requestedStart.delete(id);\r\n    if (this.capturedId === id) {\r\n      this.capturedId = undefined;\r\n    }\r\n  }\r\n  disableGesture(gestureName, id) {\r\n    let set = this.disabledGestures.get(gestureName);\r\n    if (set === undefined) {\r\n      set = new Set();\r\n      this.disabledGestures.set(gestureName, set);\r\n    }\r\n    set.add(id);\r\n  }\r\n  enableGesture(gestureName, id) {\r\n    const set = this.disabledGestures.get(gestureName);\r\n    if (set !== undefined) {\r\n      set.delete(id);\r\n    }\r\n  }\r\n  disableScroll(id) {\r\n    this.disabledScroll.add(id);\r\n    if (this.disabledScroll.size === 1) {\r\n      document.body.classList.add(BACKDROP_NO_SCROLL);\r\n    }\r\n  }\r\n  enableScroll(id) {\r\n    this.disabledScroll.delete(id);\r\n    if (this.disabledScroll.size === 0) {\r\n      document.body.classList.remove(BACKDROP_NO_SCROLL);\r\n    }\r\n  }\r\n  canStart(gestureName) {\r\n    if (this.capturedId !== undefined) {\r\n      // a gesture already captured\r\n      return false;\r\n    }\r\n    if (this.isDisabled(gestureName)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  isCaptured() {\r\n    return this.capturedId !== undefined;\r\n  }\r\n  isScrollDisabled() {\r\n    return this.disabledScroll.size > 0;\r\n  }\r\n  isDisabled(gestureName) {\r\n    const disabled = this.disabledGestures.get(gestureName);\r\n    if (disabled && disabled.size > 0) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  newID() {\r\n    this.gestureId++;\r\n    return this.gestureId;\r\n  }\r\n}\r\nclass GestureDelegate {\r\n  constructor(ctrl, id, name, priority, disableScroll) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.disableScroll = disableScroll;\r\n    this.priority = priority * 1000000 + id;\r\n    this.ctrl = ctrl;\r\n  }\r\n  canStart() {\r\n    if (!this.ctrl) {\r\n      return false;\r\n    }\r\n    return this.ctrl.canStart(this.name);\r\n  }\r\n  start() {\r\n    if (!this.ctrl) {\r\n      return false;\r\n    }\r\n    return this.ctrl.start(this.name, this.id, this.priority);\r\n  }\r\n  capture() {\r\n    if (!this.ctrl) {\r\n      return false;\r\n    }\r\n    const captured = this.ctrl.capture(this.name, this.id, this.priority);\r\n    if (captured && this.disableScroll) {\r\n      this.ctrl.disableScroll(this.id);\r\n    }\r\n    return captured;\r\n  }\r\n  release() {\r\n    if (this.ctrl) {\r\n      this.ctrl.release(this.id);\r\n      if (this.disableScroll) {\r\n        this.ctrl.enableScroll(this.id);\r\n      }\r\n    }\r\n  }\r\n  destroy() {\r\n    this.release();\r\n    this.ctrl = undefined;\r\n  }\r\n}\r\nclass BlockerDelegate {\r\n  constructor(ctrl, id, disable, disableScroll) {\r\n    this.id = id;\r\n    this.disable = disable;\r\n    this.disableScroll = disableScroll;\r\n    this.ctrl = ctrl;\r\n  }\r\n  block() {\r\n    if (!this.ctrl) {\r\n      return;\r\n    }\r\n    if (this.disable) {\r\n      for (const gesture of this.disable) {\r\n        this.ctrl.disableGesture(gesture, this.id);\r\n      }\r\n    }\r\n    if (this.disableScroll) {\r\n      this.ctrl.disableScroll(this.id);\r\n    }\r\n  }\r\n  unblock() {\r\n    if (!this.ctrl) {\r\n      return;\r\n    }\r\n    if (this.disable) {\r\n      for (const gesture of this.disable) {\r\n        this.ctrl.enableGesture(gesture, this.id);\r\n      }\r\n    }\r\n    if (this.disableScroll) {\r\n      this.ctrl.enableScroll(this.id);\r\n    }\r\n  }\r\n  destroy() {\r\n    this.unblock();\r\n    this.ctrl = undefined;\r\n  }\r\n}\r\nconst BACKDROP_NO_SCROLL = 'backdrop-no-scroll';\r\nconst GESTURE_CONTROLLER = new GestureController();\r\n\r\nexport { GESTURE_CONTROLLER as G };\r\n","/*!\r\n * (C) Ionic http://ionicframework.com - MIT License\r\n */\r\nimport { G as GESTURE_CONTROLLER } from './gesture-controller.js';\r\nexport { G as GESTURE_CONTROLLER } from './gesture-controller.js';\r\n\r\nconst addEventListener = (el, // TODO(FW-2832): type\r\neventName, callback, opts) => {\r\n  // use event listener options when supported\r\n  // otherwise it's just a boolean for the \"capture\" arg\r\n  const listenerOpts = supportsPassive(el)\r\n    ? {\r\n      capture: !!opts.capture,\r\n      passive: !!opts.passive,\r\n    }\r\n    : !!opts.capture;\r\n  let add;\r\n  let remove;\r\n  if (el['__zone_symbol__addEventListener']) {\r\n    add = '__zone_symbol__addEventListener';\r\n    remove = '__zone_symbol__removeEventListener';\r\n  }\r\n  else {\r\n    add = 'addEventListener';\r\n    remove = 'removeEventListener';\r\n  }\r\n  el[add](eventName, callback, listenerOpts);\r\n  return () => {\r\n    el[remove](eventName, callback, listenerOpts);\r\n  };\r\n};\r\nconst supportsPassive = (node) => {\r\n  if (_sPassive === undefined) {\r\n    try {\r\n      const opts = Object.defineProperty({}, 'passive', {\r\n        get: () => {\r\n          _sPassive = true;\r\n        },\r\n      });\r\n      node.addEventListener('optsTest', () => {\r\n        return;\r\n      }, opts);\r\n    }\r\n    catch (e) {\r\n      _sPassive = false;\r\n    }\r\n  }\r\n  return !!_sPassive;\r\n};\r\nlet _sPassive;\r\n\r\nconst MOUSE_WAIT = 2000;\r\n// TODO(FW-2832): types\r\nconst createPointerEvents = (el, pointerDown, pointerMove, pointerUp, options) => {\r\n  let rmTouchStart;\r\n  let rmTouchMove;\r\n  let rmTouchEnd;\r\n  let rmTouchCancel;\r\n  let rmMouseStart;\r\n  let rmMouseMove;\r\n  let rmMouseUp;\r\n  let lastTouchEvent = 0;\r\n  const handleTouchStart = (ev) => {\r\n    lastTouchEvent = Date.now() + MOUSE_WAIT;\r\n    if (!pointerDown(ev)) {\r\n      return;\r\n    }\r\n    if (!rmTouchMove && pointerMove) {\r\n      rmTouchMove = addEventListener(el, 'touchmove', pointerMove, options);\r\n    }\r\n    /**\r\n     * Events are dispatched on the element that is tapped and bubble up to\r\n     * the reference element in the gesture. In the event that the element this\r\n     * event was first dispatched on is removed from the DOM, the event will no\r\n     * longer bubble up to our reference element. This leaves the gesture in an\r\n     * unusable state. To account for this, the touchend and touchcancel listeners\r\n     * should be added to the event target so that they still fire even if the target\r\n     * is removed from the DOM.\r\n     */\r\n    if (!rmTouchEnd) {\r\n      rmTouchEnd = addEventListener(ev.target, 'touchend', handleTouchEnd, options);\r\n    }\r\n    if (!rmTouchCancel) {\r\n      rmTouchCancel = addEventListener(ev.target, 'touchcancel', handleTouchEnd, options);\r\n    }\r\n  };\r\n  const handleMouseDown = (ev) => {\r\n    if (lastTouchEvent > Date.now()) {\r\n      return;\r\n    }\r\n    if (!pointerDown(ev)) {\r\n      return;\r\n    }\r\n    if (!rmMouseMove && pointerMove) {\r\n      rmMouseMove = addEventListener(getDocument(el), 'mousemove', pointerMove, options);\r\n    }\r\n    if (!rmMouseUp) {\r\n      rmMouseUp = addEventListener(getDocument(el), 'mouseup', handleMouseUp, options);\r\n    }\r\n  };\r\n  const handleTouchEnd = (ev) => {\r\n    stopTouch();\r\n    if (pointerUp) {\r\n      pointerUp(ev);\r\n    }\r\n  };\r\n  const handleMouseUp = (ev) => {\r\n    stopMouse();\r\n    if (pointerUp) {\r\n      pointerUp(ev);\r\n    }\r\n  };\r\n  const stopTouch = () => {\r\n    if (rmTouchMove) {\r\n      rmTouchMove();\r\n    }\r\n    if (rmTouchEnd) {\r\n      rmTouchEnd();\r\n    }\r\n    if (rmTouchCancel) {\r\n      rmTouchCancel();\r\n    }\r\n    rmTouchMove = rmTouchEnd = rmTouchCancel = undefined;\r\n  };\r\n  const stopMouse = () => {\r\n    if (rmMouseMove) {\r\n      rmMouseMove();\r\n    }\r\n    if (rmMouseUp) {\r\n      rmMouseUp();\r\n    }\r\n    rmMouseMove = rmMouseUp = undefined;\r\n  };\r\n  const stop = () => {\r\n    stopTouch();\r\n    stopMouse();\r\n  };\r\n  const enable = (isEnabled = true) => {\r\n    if (!isEnabled) {\r\n      if (rmTouchStart) {\r\n        rmTouchStart();\r\n      }\r\n      if (rmMouseStart) {\r\n        rmMouseStart();\r\n      }\r\n      rmTouchStart = rmMouseStart = undefined;\r\n      stop();\r\n    }\r\n    else {\r\n      if (!rmTouchStart) {\r\n        rmTouchStart = addEventListener(el, 'touchstart', handleTouchStart, options);\r\n      }\r\n      if (!rmMouseStart) {\r\n        rmMouseStart = addEventListener(el, 'mousedown', handleMouseDown, options);\r\n      }\r\n    }\r\n  };\r\n  const destroy = () => {\r\n    enable(false);\r\n    pointerUp = pointerMove = pointerDown = undefined;\r\n  };\r\n  return {\r\n    enable,\r\n    stop,\r\n    destroy,\r\n  };\r\n};\r\nconst getDocument = (node) => {\r\n  return node instanceof Document ? node : node.ownerDocument;\r\n};\r\n\r\nconst createPanRecognizer = (direction, thresh, maxAngle) => {\r\n  const radians = maxAngle * (Math.PI / 180);\r\n  const isDirX = direction === 'x';\r\n  const maxCosine = Math.cos(radians);\r\n  const threshold = thresh * thresh;\r\n  let startX = 0;\r\n  let startY = 0;\r\n  let dirty = false;\r\n  let isPan = 0;\r\n  return {\r\n    start(x, y) {\r\n      startX = x;\r\n      startY = y;\r\n      isPan = 0;\r\n      dirty = true;\r\n    },\r\n    detect(x, y) {\r\n      if (!dirty) {\r\n        return false;\r\n      }\r\n      const deltaX = x - startX;\r\n      const deltaY = y - startY;\r\n      const distance = deltaX * deltaX + deltaY * deltaY;\r\n      if (distance < threshold) {\r\n        return false;\r\n      }\r\n      const hypotenuse = Math.sqrt(distance);\r\n      const cosine = (isDirX ? deltaX : deltaY) / hypotenuse;\r\n      if (cosine > maxCosine) {\r\n        isPan = 1;\r\n      }\r\n      else if (cosine < -maxCosine) {\r\n        isPan = -1;\r\n      }\r\n      else {\r\n        isPan = 0;\r\n      }\r\n      dirty = false;\r\n      return true;\r\n    },\r\n    isGesture() {\r\n      return isPan !== 0;\r\n    },\r\n    getDirection() {\r\n      return isPan;\r\n    },\r\n  };\r\n};\r\n\r\n// TODO(FW-2832): types\r\nconst createGesture = (config) => {\r\n  let hasCapturedPan = false;\r\n  let hasStartedPan = false;\r\n  let hasFiredStart = true;\r\n  let isMoveQueued = false;\r\n  const finalConfig = Object.assign({ disableScroll: false, direction: 'x', gesturePriority: 0, passive: true, maxAngle: 40, threshold: 10 }, config);\r\n  const canStart = finalConfig.canStart;\r\n  const onWillStart = finalConfig.onWillStart;\r\n  const onStart = finalConfig.onStart;\r\n  const onEnd = finalConfig.onEnd;\r\n  const notCaptured = finalConfig.notCaptured;\r\n  const onMove = finalConfig.onMove;\r\n  const threshold = finalConfig.threshold;\r\n  const passive = finalConfig.passive;\r\n  const blurOnStart = finalConfig.blurOnStart;\r\n  const detail = {\r\n    type: 'pan',\r\n    startX: 0,\r\n    startY: 0,\r\n    startTime: 0,\r\n    currentX: 0,\r\n    currentY: 0,\r\n    velocityX: 0,\r\n    velocityY: 0,\r\n    deltaX: 0,\r\n    deltaY: 0,\r\n    currentTime: 0,\r\n    event: undefined,\r\n    data: undefined,\r\n  };\r\n  const pan = createPanRecognizer(finalConfig.direction, finalConfig.threshold, finalConfig.maxAngle);\r\n  const gesture = GESTURE_CONTROLLER.createGesture({\r\n    name: config.gestureName,\r\n    priority: config.gesturePriority,\r\n    disableScroll: config.disableScroll,\r\n  });\r\n  const pointerDown = (ev) => {\r\n    const timeStamp = now(ev);\r\n    if (hasStartedPan || !hasFiredStart) {\r\n      return false;\r\n    }\r\n    updateDetail(ev, detail);\r\n    detail.startX = detail.currentX;\r\n    detail.startY = detail.currentY;\r\n    detail.startTime = detail.currentTime = timeStamp;\r\n    detail.velocityX = detail.velocityY = detail.deltaX = detail.deltaY = 0;\r\n    detail.event = ev;\r\n    // Check if gesture can start\r\n    if (canStart && canStart(detail) === false) {\r\n      return false;\r\n    }\r\n    // Release fallback\r\n    gesture.release();\r\n    // Start gesture\r\n    if (!gesture.start()) {\r\n      return false;\r\n    }\r\n    hasStartedPan = true;\r\n    if (threshold === 0) {\r\n      return tryToCapturePan();\r\n    }\r\n    pan.start(detail.startX, detail.startY);\r\n    return true;\r\n  };\r\n  const pointerMove = (ev) => {\r\n    // fast path, if gesture is currently captured\r\n    // do minimum job to get user-land even dispatched\r\n    if (hasCapturedPan) {\r\n      if (!isMoveQueued && hasFiredStart) {\r\n        isMoveQueued = true;\r\n        calcGestureData(detail, ev);\r\n        requestAnimationFrame(fireOnMove);\r\n      }\r\n      return;\r\n    }\r\n    // gesture is currently being detected\r\n    calcGestureData(detail, ev);\r\n    if (pan.detect(detail.currentX, detail.currentY)) {\r\n      if (!pan.isGesture() || !tryToCapturePan()) {\r\n        abortGesture();\r\n      }\r\n    }\r\n  };\r\n  const fireOnMove = () => {\r\n    // Since fireOnMove is called inside a RAF, onEnd() might be called,\r\n    // we must double check hasCapturedPan\r\n    if (!hasCapturedPan) {\r\n      return;\r\n    }\r\n    isMoveQueued = false;\r\n    if (onMove) {\r\n      onMove(detail);\r\n    }\r\n  };\r\n  const tryToCapturePan = () => {\r\n    if (!gesture.capture()) {\r\n      return false;\r\n    }\r\n    hasCapturedPan = true;\r\n    hasFiredStart = false;\r\n    // reset start position since the real user-land event starts here\r\n    // If the pan detector threshold is big, not resetting the start position\r\n    // will cause a jump in the animation equal to the detector threshold.\r\n    // the array of positions used to calculate the gesture velocity does not\r\n    // need to be cleaned, more points in the positions array always results in a\r\n    // more accurate value of the velocity.\r\n    detail.startX = detail.currentX;\r\n    detail.startY = detail.currentY;\r\n    detail.startTime = detail.currentTime;\r\n    if (onWillStart) {\r\n      onWillStart(detail).then(fireOnStart);\r\n    }\r\n    else {\r\n      fireOnStart();\r\n    }\r\n    return true;\r\n  };\r\n  const blurActiveElement = () => {\r\n    if (typeof document !== 'undefined') {\r\n      const activeElement = document.activeElement;\r\n      if (activeElement === null || activeElement === void 0 ? void 0 : activeElement.blur) {\r\n        activeElement.blur();\r\n      }\r\n    }\r\n  };\r\n  const fireOnStart = () => {\r\n    if (blurOnStart) {\r\n      blurActiveElement();\r\n    }\r\n    if (onStart) {\r\n      onStart(detail);\r\n    }\r\n    hasFiredStart = true;\r\n  };\r\n  const reset = () => {\r\n    hasCapturedPan = false;\r\n    hasStartedPan = false;\r\n    isMoveQueued = false;\r\n    hasFiredStart = true;\r\n    gesture.release();\r\n  };\r\n  // END *************************\r\n  const pointerUp = (ev) => {\r\n    const tmpHasCaptured = hasCapturedPan;\r\n    const tmpHasFiredStart = hasFiredStart;\r\n    reset();\r\n    if (!tmpHasFiredStart) {\r\n      return;\r\n    }\r\n    calcGestureData(detail, ev);\r\n    // Try to capture press\r\n    if (tmpHasCaptured) {\r\n      if (onEnd) {\r\n        onEnd(detail);\r\n      }\r\n      return;\r\n    }\r\n    // Not captured any event\r\n    if (notCaptured) {\r\n      notCaptured(detail);\r\n    }\r\n  };\r\n  const pointerEvents = createPointerEvents(finalConfig.el, pointerDown, pointerMove, pointerUp, {\r\n    capture: false,\r\n    passive,\r\n  });\r\n  const abortGesture = () => {\r\n    reset();\r\n    pointerEvents.stop();\r\n    if (notCaptured) {\r\n      notCaptured(detail);\r\n    }\r\n  };\r\n  return {\r\n    enable(enable = true) {\r\n      if (!enable) {\r\n        if (hasCapturedPan) {\r\n          pointerUp(undefined);\r\n        }\r\n        reset();\r\n      }\r\n      pointerEvents.enable(enable);\r\n    },\r\n    destroy() {\r\n      gesture.destroy();\r\n      pointerEvents.destroy();\r\n    },\r\n  };\r\n};\r\nconst calcGestureData = (detail, ev) => {\r\n  if (!ev) {\r\n    return;\r\n  }\r\n  const prevX = detail.currentX;\r\n  const prevY = detail.currentY;\r\n  const prevT = detail.currentTime;\r\n  updateDetail(ev, detail);\r\n  const currentX = detail.currentX;\r\n  const currentY = detail.currentY;\r\n  const timestamp = (detail.currentTime = now(ev));\r\n  const timeDelta = timestamp - prevT;\r\n  if (timeDelta > 0 && timeDelta < 100) {\r\n    const velocityX = (currentX - prevX) / timeDelta;\r\n    const velocityY = (currentY - prevY) / timeDelta;\r\n    detail.velocityX = velocityX * 0.7 + detail.velocityX * 0.3;\r\n    detail.velocityY = velocityY * 0.7 + detail.velocityY * 0.3;\r\n  }\r\n  detail.deltaX = currentX - detail.startX;\r\n  detail.deltaY = currentY - detail.startY;\r\n  detail.event = ev;\r\n};\r\nconst updateDetail = (ev, detail) => {\r\n  // get X coordinates for either a mouse click\r\n  // or a touch depending on the given event\r\n  let x = 0;\r\n  let y = 0;\r\n  if (ev) {\r\n    const changedTouches = ev.changedTouches;\r\n    if (changedTouches && changedTouches.length > 0) {\r\n      const touch = changedTouches[0];\r\n      x = touch.clientX;\r\n      y = touch.clientY;\r\n    }\r\n    else if (ev.pageX !== undefined) {\r\n      x = ev.pageX;\r\n      y = ev.pageY;\r\n    }\r\n  }\r\n  detail.currentX = x;\r\n  detail.currentY = y;\r\n};\r\nconst now = (ev) => {\r\n  return ev.timeStamp || Date.now();\r\n};\r\n\r\nexport { createGesture };\r\n","/*!\r\n * (C) Ionic http://ionicframework.com - MIT License\r\n */\r\nimport { m as clamp } from './helpers.js';\r\nimport { i as isRTL } from './dir.js';\r\nimport { createGesture } from './index3.js';\r\n\r\nconst createSwipeBackGesture = (el, canStartHandler, onStartHandler, onMoveHandler, onEndHandler) => {\r\n  const win = el.ownerDocument.defaultView;\r\n  let rtl = isRTL(el);\r\n  /**\r\n   * Determine if a gesture is near the edge\r\n   * of the screen. If true, then the swipe\r\n   * to go back gesture should proceed.\r\n   */\r\n  const isAtEdge = (detail) => {\r\n    const threshold = 50;\r\n    const { startX } = detail;\r\n    if (rtl) {\r\n      return startX >= win.innerWidth - threshold;\r\n    }\r\n    return startX <= threshold;\r\n  };\r\n  const getDeltaX = (detail) => {\r\n    return rtl ? -detail.deltaX : detail.deltaX;\r\n  };\r\n  const getVelocityX = (detail) => {\r\n    return rtl ? -detail.velocityX : detail.velocityX;\r\n  };\r\n  const canStart = (detail) => {\r\n    /**\r\n     * The user's locale can change mid-session,\r\n     * so we need to check text direction at\r\n     * the beginning of every gesture.\r\n     */\r\n    rtl = isRTL(el);\r\n    return isAtEdge(detail) && canStartHandler();\r\n  };\r\n  const onMove = (detail) => {\r\n    // set the transition animation's progress\r\n    const delta = getDeltaX(detail);\r\n    const stepValue = delta / win.innerWidth;\r\n    onMoveHandler(stepValue);\r\n  };\r\n  const onEnd = (detail) => {\r\n    // the swipe back gesture has ended\r\n    const delta = getDeltaX(detail);\r\n    const width = win.innerWidth;\r\n    const stepValue = delta / width;\r\n    const velocity = getVelocityX(detail);\r\n    const z = width / 2.0;\r\n    const shouldComplete = velocity >= 0 && (velocity > 0.2 || delta > z);\r\n    const missing = shouldComplete ? 1 - stepValue : stepValue;\r\n    const missingDistance = missing * width;\r\n    let realDur = 0;\r\n    if (missingDistance > 5) {\r\n      const dur = missingDistance / Math.abs(velocity);\r\n      realDur = Math.min(dur, 540);\r\n    }\r\n    onEndHandler(shouldComplete, stepValue <= 0 ? 0.01 : clamp(0, stepValue, 0.9999), realDur);\r\n  };\r\n  return createGesture({\r\n    el,\r\n    gestureName: 'goback-swipe',\r\n    /**\r\n     * Swipe to go back should have priority over other horizontal swipe\r\n     * gestures. These gestures have a priority of 100 which is why 101 was chosen here.\r\n     */\r\n    gesturePriority: 101,\r\n    threshold: 10,\r\n    canStart,\r\n    onStart: onStartHandler,\r\n    onMove,\r\n    onEnd,\r\n  });\r\n};\r\n\r\nexport { createSwipeBackGesture };\r\n"],"names":["GestureController","constructor","this","gestureId","requestedStart","Map","disabledGestures","disabledScroll","Set","createGesture","config","_a","GestureDelegate","newID","name","priority","disableScroll","createBlocker","opts","BlockerDelegate","disable","start","gestureName","id","canStart","set","delete","capture","maxPriority","forEach","value","Math","max","capturedId","clear","event","CustomEvent","detail","document","dispatchEvent","release","undefined","disableGesture","get","add","enableGesture","size","body","classList","BACKDROP_NO_SCROLL","enableScroll","remove","isDisabled","isCaptured","isScrollDisabled","disabled","ctrl","captured","destroy","block","gesture","unblock","GESTURE_CONTROLLER","addEventListener","el","eventName","callback","listenerOpts","supportsPassive","passive","node","_sPassive","Object","defineProperty","e","MOUSE_WAIT","createPointerEvents","pointerDown","pointerMove","pointerUp","options","rmTouchStart","rmTouchMove","rmTouchEnd","rmTouchCancel","rmMouseStart","rmMouseMove","rmMouseUp","lastTouchEvent","handleTouchStart","ev","Date","now","target","handleTouchEnd","handleMouseDown","getDocument","handleMouseUp","stopTouch","stopMouse","stop","enable","isEnabled","Document","ownerDocument","createPanRecognizer","direction","thresh","maxAngle","radians","PI","isDirX","maxCosine","cos","threshold","startX","startY","dirty","isPan","x","y","detect","deltaX","deltaY","distance","hypotenuse","sqrt","cosine","isGesture","getDirection","hasCapturedPan","hasStartedPan","hasFiredStart","isMoveQueued","finalConfig","assign","gesturePriority","onWillStart","onStart","onEnd","notCaptured","onMove","blurOnStart","type","startTime","currentX","currentY","velocityX","velocityY","currentTime","data","pan","timeStamp","updateDetail","tryToCapturePan","calcGestureData","requestAnimationFrame","fireOnMove","abortGesture","then","fireOnStart","blurActiveElement","activeElement","blur","reset","tmpHasCaptured","tmpHasFiredStart","pointerEvents","prevX","prevY","prevT","timestamp","timeDelta","changedTouches","length","touch","clientX","clientY","pageX","pageY","createSwipeBackGesture","canStartHandler","onStartHandler","onMoveHandler","onEndHandler","win","defaultView","rtl","i","isAtEdge","innerWidth","getDeltaX","getVelocityX","delta","stepValue","width","velocity","z","shouldComplete","missing","missingDistance","realDur","dur","abs","min"],"sourceRoot":""}