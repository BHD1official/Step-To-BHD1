{"ast":null,"code":"// modules/navigation\n// gameType: 1- cards, 2- time, 3- trivia, 4- think, 5- exam\nexport default {\n  namespaced: true,\n  state: {\n    gameType: null,\n    chosenChapters: [],\n    // test\n    _questNum: -1,\n    testAnswers: [{\n      correct: -1,\n      picked: -1\n    }, {\n      correct: -1,\n      picked: -1\n    }, {\n      correct: -1,\n      picked: -1\n    }, {\n      correct: -1,\n      picked: -1\n    }, {\n      correct: -1,\n      picked: -1\n    }, {\n      correct: -1,\n      picked: -1\n    }, {\n      correct: -1,\n      picked: -1\n    }, {\n      correct: -1,\n      picked: -1\n    }, {\n      correct: -1,\n      picked: -1\n    }, {\n      correct: -1,\n      picked: -1\n    }]\n  },\n  mutations: {\n    setGameType(state, gameType) {\n      state.gameType = gameType;\n    },\n    cleanGameType(state) {\n      state.gameType = null;\n      state.chosenChapters = [];\n    },\n    addOrRemoveChap(state, chapterNum) {\n      if (state.chosenChapters.includes(chapterNum)) {\n        state.chosenChapters.splice(state.chosenChapters.indexOf(chapterNum), 1);\n      } else {\n        let i = 0;\n        while (state.chosenChapters[i] < chapterNum) i++;\n        state.chosenChapters.splice(i, 0, chapterNum);\n      }\n    },\n    updateCorrectAns(state, correct) {\n      state.testAnswers.forEach((ques, i) => ques.correct = correct[i]);\n    },\n    updatePickedAns(state, update) {\n      state.testAnswers[state._questNum].picked = update.hisAnswer;\n    },\n    updatequestNum(state, num) {\n      state._questNum = num;\n    },\n    resetPicked(state) {\n      state.testAnswers.forEach(ques => ques.picked = -1);\n    }\n  },\n  actions: {\n    setGameType({\n      commit\n    }, gameType) {\n      commit(\"setGameType\", gameType);\n      commit(\"navigation/smallNavi\", null, {\n        root: true\n      });\n    },\n    addOrRemoveChap({\n      commit\n    }, chapterNum) {\n      commit(\"addOrRemoveChap\", chapterNum);\n    },\n    // test\n    updateCorrectAns({\n      commit\n    }, correct) {\n      commit(\"updateCorrectAns\", correct);\n    },\n    updatePickedAns({\n      commit\n    }, update) {\n      commit(\"updatePickedAns\", update);\n    },\n    updatequestNum({\n      commit\n    }, num) {\n      commit(\"updatequestNum\", num);\n    },\n    resetPicked({\n      commit\n    }) {\n      commit(\"resetPicked\");\n    },\n    exitTest({\n      commit\n    }) {\n      commit(\"cleanGameType\");\n      commit(\"updatequestNum\", -1);\n      commit(\"resetPicked\");\n    },\n    exitGame({\n      commit\n    }) {\n      commit(\"cleanGameType\");\n      commit(\"updatequestNum\", -1);\n    }\n  }\n};","map":{"version":3,"names":["namespaced","state","gameType","chosenChapters","_questNum","testAnswers","correct","picked","mutations","setGameType","cleanGameType","addOrRemoveChap","chapterNum","includes","splice","indexOf","i","updateCorrectAns","forEach","ques","updatePickedAns","update","hisAnswer","updatequestNum","num","resetPicked","actions","commit","root","exitTest","exitGame"],"sources":["C:/Users/ellas/OneDrive/Documents/Step-To-BHD1/src/store/modules/games.js"],"sourcesContent":["// modules/navigation\r\n// gameType: 1- cards, 2- time, 3- trivia, 4- think, 5- exam\r\nexport default {\r\n  namespaced: true,\r\n  state: {\r\n    gameType: null,\r\n    chosenChapters: [],\r\n    // test\r\n    _questNum: -1,\r\n    testAnswers: [\r\n      { correct: -1, picked: -1 },\r\n      { correct: -1, picked: -1 },\r\n      { correct: -1, picked: -1 },\r\n      { correct: -1, picked: -1 },\r\n      { correct: -1, picked: -1 },\r\n      { correct: -1, picked: -1 },\r\n      { correct: -1, picked: -1 },\r\n      { correct: -1, picked: -1 },\r\n      { correct: -1, picked: -1 },\r\n      { correct: -1, picked: -1 },\r\n    ],\r\n  },\r\n\r\n  mutations: {\r\n    setGameType(state, gameType) {\r\n      state.gameType = gameType;\r\n    },\r\n\r\n    cleanGameType(state) {\r\n      state.gameType = null;\r\n      state.chosenChapters = [];\r\n    },\r\n\r\n    addOrRemoveChap(state, chapterNum) {\r\n      if (state.chosenChapters.includes(chapterNum)) {\r\n        state.chosenChapters.splice(\r\n          state.chosenChapters.indexOf(chapterNum),\r\n          1\r\n        );\r\n      } else {\r\n        let i = 0;\r\n        while (state.chosenChapters[i] < chapterNum) i++;\r\n        state.chosenChapters.splice(i, 0, chapterNum);\r\n      }\r\n    },\r\n\r\n    updateCorrectAns(state, correct) {\r\n      state.testAnswers.forEach((ques, i) => (ques.correct = correct[i]));\r\n    },\r\n\r\n    updatePickedAns(state, update) {\r\n      state.testAnswers[state._questNum].picked = update.hisAnswer;\r\n    },\r\n\r\n    updatequestNum(state, num) {\r\n      state._questNum = num;\r\n    },\r\n\r\n    resetPicked(state) {\r\n      state.testAnswers.forEach((ques) => (ques.picked = -1));\r\n    },\r\n  },\r\n\r\n  actions: {\r\n    setGameType({ commit }, gameType) {\r\n      commit(\"setGameType\", gameType);\r\n      commit(\"navigation/smallNavi\", null, { root: true });\r\n    },\r\n\r\n    addOrRemoveChap({ commit }, chapterNum) {\r\n      commit(\"addOrRemoveChap\", chapterNum);\r\n    },\r\n\r\n    // test\r\n    updateCorrectAns({ commit }, correct) {\r\n      commit(\"updateCorrectAns\", correct);\r\n    },\r\n\r\n    updatePickedAns({ commit }, update) {\r\n      commit(\"updatePickedAns\", update);\r\n    },\r\n\r\n    updatequestNum({ commit }, num) {\r\n      commit(\"updatequestNum\", num);\r\n    },\r\n\r\n    resetPicked({ commit }) {\r\n      commit(\"resetPicked\");\r\n    },\r\n\r\n    exitTest({commit}) {\r\n      commit(\"cleanGameType\");\r\n      commit(\"updatequestNum\", -1);\r\n      commit(\"resetPicked\");\r\n    },\r\n\r\n    exitGame({commit}) {\r\n      commit(\"cleanGameType\");\r\n      commit(\"updatequestNum\", -1);\r\n    },\r\n  },\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}